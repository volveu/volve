// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

enum Role {
    USER
    ADMIN
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

generator client {
    provider = "prisma-client-js"
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    createdBy   User   @relation(fields: [createdById], references: [id])
    createdById String

    @@index([name])
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    password      String?
    role          Role      @default(USER)
    accounts      Account[]
    sessions      Session[]
    posts         Post[]

    volunteer     Volunteer?
    administrator Administrator?
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

// Inheritance reference:
// https://www.basedash.com/blog/how-to-model-inheritance-in-prisma
model Volunteer {
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId String @id

    activities Activity[]
}

model Administrator {
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId String @id

    manageActivities Activity[]
}

model Activity {
    id             String   @id @default(cuid())
    title          String
    description    String
    startTimestamp DateTime
    endTimestamp   DateTime
    isVisible      Boolean

    tags     Tag[]
    capacity Int

    volunteers      Volunteer[]
    manager         Administrator @relation(fields: [administratorId], references: [userId])
    administratorId String

    primaryContactInfo String
    organization       Npo    @relation(fields: [npoId], references: [id])
    npoId              String
}

model Tag {
    title      String     @id
    activities Activity[]
}

model Npo {
    id          String  @id @default(cuid())
    name        String
    description String
    logo        String?
    website     String?

    activities Activity[]
}
